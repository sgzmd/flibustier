// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.12.4
// source: flibustier.proto

//
//To compile:
//
//protoc --go_out=. --go_opt=paths=source_relative  \
//--go-grpc_out=. --go-grpc_opt=paths=source_relative \
//flibustier.proto
//

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EntryType int32

const (
	EntryType_UNKNOWN EntryType = 0
	EntryType_SERIES  EntryType = 1
	EntryType_AUTHOR  EntryType = 2
	EntryType_BOOK    EntryType = 3
)

// Enum value maps for EntryType.
var (
	EntryType_name = map[int32]string{
		0: "UNKNOWN",
		1: "SERIES",
		2: "AUTHOR",
		3: "BOOK",
	}
	EntryType_value = map[string]int32{
		"UNKNOWN": 0,
		"SERIES":  1,
		"AUTHOR":  2,
		"BOOK":    3,
	}
)

func (x EntryType) Enum() *EntryType {
	p := new(EntryType)
	*p = x
	return p
}

func (x EntryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EntryType) Descriptor() protoreflect.EnumDescriptor {
	return file_flibustier_proto_enumTypes[0].Descriptor()
}

func (EntryType) Type() protoreflect.EnumType {
	return &file_flibustier_proto_enumTypes[0]
}

func (x EntryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EntryType.Descriptor instead.
func (EntryType) EnumDescriptor() ([]byte, []int) {
	return file_flibustier_proto_rawDescGZIP(), []int{0}
}

type SearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchTerm      string    `protobuf:"bytes,1,opt,name=search_term,json=searchTerm,proto3" json:"search_term,omitempty"`
	EntryTypeFilter EntryType `protobuf:"varint,2,opt,name=entry_type_filter,json=entryTypeFilter,proto3,enum=flibustier.EntryType" json:"entry_type_filter,omitempty"`
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flibustier_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flibustier_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_flibustier_proto_rawDescGZIP(), []int{0}
}

func (x *SearchRequest) GetSearchTerm() string {
	if x != nil {
		return x.SearchTerm
	}
	return ""
}

func (x *SearchRequest) GetEntryTypeFilter() EntryType {
	if x != nil {
		return x.EntryTypeFilter
	}
	return EntryType_UNKNOWN
}

type FoundEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntryType   EntryType `protobuf:"varint,1,opt,name=entry_type,json=entryType,proto3,enum=flibustier.EntryType" json:"entry_type,omitempty"`
	EntryName   string    `protobuf:"bytes,2,opt,name=entry_name,json=entryName,proto3" json:"entry_name,omitempty"`
	Author      string    `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	EntryId     int64     `protobuf:"varint,4,opt,name=entry_id,json=entryId,proto3" json:"entry_id,omitempty"`
	NumEntities int32     `protobuf:"varint,5,opt,name=num_entities,json=numEntities,proto3" json:"num_entities,omitempty"`
}

func (x *FoundEntry) Reset() {
	*x = FoundEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flibustier_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FoundEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FoundEntry) ProtoMessage() {}

func (x *FoundEntry) ProtoReflect() protoreflect.Message {
	mi := &file_flibustier_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FoundEntry.ProtoReflect.Descriptor instead.
func (*FoundEntry) Descriptor() ([]byte, []int) {
	return file_flibustier_proto_rawDescGZIP(), []int{1}
}

func (x *FoundEntry) GetEntryType() EntryType {
	if x != nil {
		return x.EntryType
	}
	return EntryType_UNKNOWN
}

func (x *FoundEntry) GetEntryName() string {
	if x != nil {
		return x.EntryName
	}
	return ""
}

func (x *FoundEntry) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *FoundEntry) GetEntryId() int64 {
	if x != nil {
		return x.EntryId
	}
	return 0
}

func (x *FoundEntry) GetNumEntities() int32 {
	if x != nil {
		return x.NumEntities
	}
	return 0
}

type SearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginalRequest *SearchRequest `protobuf:"bytes,1,opt,name=original_request,json=originalRequest,proto3" json:"original_request,omitempty"`
	Entry           []*FoundEntry  `protobuf:"bytes,2,rep,name=entry,proto3" json:"entry,omitempty"`
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flibustier_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flibustier_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_flibustier_proto_rawDescGZIP(), []int{2}
}

func (x *SearchResponse) GetOriginalRequest() *SearchRequest {
	if x != nil {
		return x.OriginalRequest
	}
	return nil
}

func (x *SearchResponse) GetEntry() []*FoundEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type Book struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookName string `protobuf:"bytes,1,opt,name=book_name,json=bookName,proto3" json:"book_name,omitempty"`
	BookId   int32  `protobuf:"varint,2,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
}

func (x *Book) Reset() {
	*x = Book{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flibustier_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Book) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Book) ProtoMessage() {}

func (x *Book) ProtoReflect() protoreflect.Message {
	mi := &file_flibustier_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Book.ProtoReflect.Descriptor instead.
func (*Book) Descriptor() ([]byte, []int) {
	return file_flibustier_proto_rawDescGZIP(), []int{3}
}

func (x *Book) GetBookName() string {
	if x != nil {
		return x.BookName
	}
	return ""
}

func (x *Book) GetBookId() int32 {
	if x != nil {
		return x.BookId
	}
	return 0
}

type TrackedEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntryType  EntryType `protobuf:"varint,1,opt,name=entry_type,json=entryType,proto3,enum=flibustier.EntryType" json:"entry_type,omitempty"`
	EntryName  string    `protobuf:"bytes,2,opt,name=entry_name,json=entryName,proto3" json:"entry_name,omitempty"`
	EntryId    int32     `protobuf:"varint,3,opt,name=entry_id,json=entryId,proto3" json:"entry_id,omitempty"`
	NumEntries int32     `protobuf:"varint,4,opt,name=num_entries,json=numEntries,proto3" json:"num_entries,omitempty"`
	UserId     string    `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Book       []*Book   `protobuf:"bytes,6,rep,name=book,proto3" json:"book,omitempty"`
}

func (x *TrackedEntry) Reset() {
	*x = TrackedEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flibustier_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackedEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackedEntry) ProtoMessage() {}

func (x *TrackedEntry) ProtoReflect() protoreflect.Message {
	mi := &file_flibustier_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackedEntry.ProtoReflect.Descriptor instead.
func (*TrackedEntry) Descriptor() ([]byte, []int) {
	return file_flibustier_proto_rawDescGZIP(), []int{4}
}

func (x *TrackedEntry) GetEntryType() EntryType {
	if x != nil {
		return x.EntryType
	}
	return EntryType_UNKNOWN
}

func (x *TrackedEntry) GetEntryName() string {
	if x != nil {
		return x.EntryName
	}
	return ""
}

func (x *TrackedEntry) GetEntryId() int32 {
	if x != nil {
		return x.EntryId
	}
	return 0
}

func (x *TrackedEntry) GetNumEntries() int32 {
	if x != nil {
		return x.NumEntries
	}
	return 0
}

func (x *TrackedEntry) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TrackedEntry) GetBook() []*Book {
	if x != nil {
		return x.Book
	}
	return nil
}

type UpdateRequired struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackedEntry  *TrackedEntry `protobuf:"bytes,1,opt,name=tracked_entry,json=trackedEntry,proto3" json:"tracked_entry,omitempty"`
	NewNumEntries int32         `protobuf:"varint,2,opt,name=new_num_entries,json=newNumEntries,proto3" json:"new_num_entries,omitempty"`
	NewBook       []*Book       `protobuf:"bytes,3,rep,name=new_book,json=newBook,proto3" json:"new_book,omitempty"`
}

func (x *UpdateRequired) Reset() {
	*x = UpdateRequired{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flibustier_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequired) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequired) ProtoMessage() {}

func (x *UpdateRequired) ProtoReflect() protoreflect.Message {
	mi := &file_flibustier_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequired.ProtoReflect.Descriptor instead.
func (*UpdateRequired) Descriptor() ([]byte, []int) {
	return file_flibustier_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateRequired) GetTrackedEntry() *TrackedEntry {
	if x != nil {
		return x.TrackedEntry
	}
	return nil
}

func (x *UpdateRequired) GetNewNumEntries() int32 {
	if x != nil {
		return x.NewNumEntries
	}
	return 0
}

func (x *UpdateRequired) GetNewBook() []*Book {
	if x != nil {
		return x.NewBook
	}
	return nil
}

type UpdateCheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackedEntry []*TrackedEntry `protobuf:"bytes,1,rep,name=tracked_entry,json=trackedEntry,proto3" json:"tracked_entry,omitempty"`
}

func (x *UpdateCheckRequest) Reset() {
	*x = UpdateCheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flibustier_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCheckRequest) ProtoMessage() {}

func (x *UpdateCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flibustier_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCheckRequest.ProtoReflect.Descriptor instead.
func (*UpdateCheckRequest) Descriptor() ([]byte, []int) {
	return file_flibustier_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateCheckRequest) GetTrackedEntry() []*TrackedEntry {
	if x != nil {
		return x.TrackedEntry
	}
	return nil
}

type UpdateCheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateRequired []*UpdateRequired `protobuf:"bytes,1,rep,name=update_required,json=updateRequired,proto3" json:"update_required,omitempty"`
}

func (x *UpdateCheckResponse) Reset() {
	*x = UpdateCheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flibustier_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCheckResponse) ProtoMessage() {}

func (x *UpdateCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flibustier_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCheckResponse.ProtoReflect.Descriptor instead.
func (*UpdateCheckResponse) Descriptor() ([]byte, []int) {
	return file_flibustier_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateCheckResponse) GetUpdateRequired() []*UpdateRequired {
	if x != nil {
		return x.UpdateRequired
	}
	return nil
}

type SequenceBooksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SequenceId int32 `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId,proto3" json:"sequence_id,omitempty"`
}

func (x *SequenceBooksRequest) Reset() {
	*x = SequenceBooksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flibustier_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SequenceBooksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequenceBooksRequest) ProtoMessage() {}

func (x *SequenceBooksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flibustier_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SequenceBooksRequest.ProtoReflect.Descriptor instead.
func (*SequenceBooksRequest) Descriptor() ([]byte, []int) {
	return file_flibustier_proto_rawDescGZIP(), []int{8}
}

func (x *SequenceBooksRequest) GetSequenceId() int32 {
	if x != nil {
		return x.SequenceId
	}
	return 0
}

type AuthorBooksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorId int32 `protobuf:"varint,1,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
}

func (x *AuthorBooksRequest) Reset() {
	*x = AuthorBooksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flibustier_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorBooksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorBooksRequest) ProtoMessage() {}

func (x *AuthorBooksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flibustier_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorBooksRequest.ProtoReflect.Descriptor instead.
func (*AuthorBooksRequest) Descriptor() ([]byte, []int) {
	return file_flibustier_proto_rawDescGZIP(), []int{9}
}

func (x *AuthorBooksRequest) GetAuthorId() int32 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

type EntityBookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId   int32       `protobuf:"varint,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	Book       []*Book     `protobuf:"bytes,2,rep,name=book,proto3" json:"book,omitempty"`
	EntityName *EntityName `protobuf:"bytes,3,opt,name=entity_name,json=entityName,proto3" json:"entity_name,omitempty"`
}

func (x *EntityBookResponse) Reset() {
	*x = EntityBookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flibustier_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityBookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityBookResponse) ProtoMessage() {}

func (x *EntityBookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flibustier_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityBookResponse.ProtoReflect.Descriptor instead.
func (*EntityBookResponse) Descriptor() ([]byte, []int) {
	return file_flibustier_proto_rawDescGZIP(), []int{10}
}

func (x *EntityBookResponse) GetEntityId() int32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *EntityBookResponse) GetBook() []*Book {
	if x != nil {
		return x.Book
	}
	return nil
}

func (x *EntityBookResponse) GetEntityName() *EntityName {
	if x != nil {
		return x.EntityName
	}
	return nil
}

type AuthorName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName  string `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	MiddleName string `protobuf:"bytes,2,opt,name=middle_name,json=middleName,proto3" json:"middle_name,omitempty"`
	LastName   string `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
}

func (x *AuthorName) Reset() {
	*x = AuthorName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flibustier_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorName) ProtoMessage() {}

func (x *AuthorName) ProtoReflect() protoreflect.Message {
	mi := &file_flibustier_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorName.ProtoReflect.Descriptor instead.
func (*AuthorName) Descriptor() ([]byte, []int) {
	return file_flibustier_proto_rawDescGZIP(), []int{11}
}

func (x *AuthorName) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *AuthorName) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *AuthorName) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

type EntityName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Name:
	//	*EntityName_AuthorName
	//	*EntityName_SequenceName
	Name isEntityName_Name `protobuf_oneof:"name"`
}

func (x *EntityName) Reset() {
	*x = EntityName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flibustier_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityName) ProtoMessage() {}

func (x *EntityName) ProtoReflect() protoreflect.Message {
	mi := &file_flibustier_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityName.ProtoReflect.Descriptor instead.
func (*EntityName) Descriptor() ([]byte, []int) {
	return file_flibustier_proto_rawDescGZIP(), []int{12}
}

func (m *EntityName) GetName() isEntityName_Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (x *EntityName) GetAuthorName() *AuthorName {
	if x, ok := x.GetName().(*EntityName_AuthorName); ok {
		return x.AuthorName
	}
	return nil
}

func (x *EntityName) GetSequenceName() string {
	if x, ok := x.GetName().(*EntityName_SequenceName); ok {
		return x.SequenceName
	}
	return ""
}

type isEntityName_Name interface {
	isEntityName_Name()
}

type EntityName_AuthorName struct {
	AuthorName *AuthorName `protobuf:"bytes,1,opt,name=author_name,json=authorName,proto3,oneof"`
}

type EntityName_SequenceName struct {
	SequenceName string `protobuf:"bytes,2,opt,name=sequence_name,json=sequenceName,proto3,oneof"`
}

func (*EntityName_AuthorName) isEntityName_Name() {}

func (*EntityName_SequenceName) isEntityName_Name() {}

var File_flibustier_proto protoreflect.FileDescriptor

var file_flibustier_proto_rawDesc = []byte{
	0x0a, 0x10, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x74, 0x69, 0x65, 0x72, 0x22, 0x73,
	0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x65, 0x72, 0x6d,
	0x12, 0x41, 0x0a, 0x11, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x66, 0x6c,
	0x69, 0x62, 0x75, 0x73, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x22, 0xb7, 0x01, 0x0a, 0x0a, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x34, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x74,
	0x69, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12,
	0x19, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x75,
	0x6d, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x6e, 0x75, 0x6d, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x84, 0x01,
	0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x44, 0x0a, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66, 0x6c, 0x69,
	0x62, 0x75, 0x73, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x74, 0x69,
	0x65, 0x72, 0x2e, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x22, 0x3c, 0x0a, 0x04, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x1b, 0x0a, 0x09,
	0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6f, 0x6f,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x62, 0x6f, 0x6f, 0x6b,
	0x49, 0x64, 0x22, 0xde, 0x01, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x34, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73,
	0x74, 0x69, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x74,
	0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x75, 0x6d, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x45, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x04, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x66, 0x6c,
	0x69, 0x62, 0x75, 0x73, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x04, 0x62,
	0x6f, 0x6f, 0x6b, 0x22, 0xa4, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x3d, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65,
	0x64, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x77, 0x5f, 0x6e, 0x75, 0x6d,
	0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x6e, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x2b, 0x0a,
	0x08, 0x6e, 0x65, 0x77, 0x5f, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x42, 0x6f, 0x6f,
	0x6b, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x42, 0x6f, 0x6f, 0x6b, 0x22, 0x53, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3d, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73,
	0x74, 0x69, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x22,
	0x5a, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x52, 0x0e, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x37, 0x0a, 0x14, 0x53,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x12, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x42, 0x6f,
	0x6f, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x90, 0x01, 0x0a, 0x12, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x04, 0x62,
	0x6f, 0x6f, 0x6b, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x66, 0x6c, 0x69, 0x62,
	0x75, 0x73, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x04, 0x62, 0x6f, 0x6f,
	0x6b, 0x12, 0x37, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x74,
	0x69, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0a,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x69, 0x0a, 0x0a, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x76, 0x0a, 0x0a, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75,
	0x73, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x48, 0x00, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25,
	0x0a, 0x0d, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x2a, 0x3a, 0x0a,
	0x09, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x45, 0x52, 0x49, 0x45,
	0x53, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x10, 0x02, 0x12,
	0x08, 0x0a, 0x04, 0x42, 0x4f, 0x4f, 0x4b, 0x10, 0x03, 0x32, 0xd2, 0x02, 0x0a, 0x0a, 0x46, 0x6c,
	0x69, 0x62, 0x75, 0x73, 0x74, 0x69, 0x65, 0x72, 0x12, 0x47, 0x0a, 0x0c, 0x47, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x19, 0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75,
	0x73, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x74, 0x69, 0x65, 0x72,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x51, 0x0a, 0x0c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x12, 0x1e, 0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x20, 0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x74,
	0x69, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x6f, 0x6f, 0x6b,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75,
	0x73, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x6f, 0x6f, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x1e, 0x2e, 0x66,
	0x6c, 0x69, 0x62, 0x75, 0x73, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x66,
	0x6c, 0x69, 0x62, 0x75, 0x73, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x53,
	0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x67, 0x7a, 0x6d, 0x64, 0x2e, 0x66, 0x6c, 0x69, 0x62,
	0x75, 0x73, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x0f, 0x46, 0x6c,
	0x69, 0x62, 0x75, 0x73, 0x74, 0x69, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x22, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x72, 0x2f, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_flibustier_proto_rawDescOnce sync.Once
	file_flibustier_proto_rawDescData = file_flibustier_proto_rawDesc
)

func file_flibustier_proto_rawDescGZIP() []byte {
	file_flibustier_proto_rawDescOnce.Do(func() {
		file_flibustier_proto_rawDescData = protoimpl.X.CompressGZIP(file_flibustier_proto_rawDescData)
	})
	return file_flibustier_proto_rawDescData
}

var file_flibustier_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_flibustier_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_flibustier_proto_goTypes = []interface{}{
	(EntryType)(0),               // 0: flibustier.EntryType
	(*SearchRequest)(nil),        // 1: flibustier.SearchRequest
	(*FoundEntry)(nil),           // 2: flibustier.FoundEntry
	(*SearchResponse)(nil),       // 3: flibustier.SearchResponse
	(*Book)(nil),                 // 4: flibustier.Book
	(*TrackedEntry)(nil),         // 5: flibustier.TrackedEntry
	(*UpdateRequired)(nil),       // 6: flibustier.UpdateRequired
	(*UpdateCheckRequest)(nil),   // 7: flibustier.UpdateCheckRequest
	(*UpdateCheckResponse)(nil),  // 8: flibustier.UpdateCheckResponse
	(*SequenceBooksRequest)(nil), // 9: flibustier.SequenceBooksRequest
	(*AuthorBooksRequest)(nil),   // 10: flibustier.AuthorBooksRequest
	(*EntityBookResponse)(nil),   // 11: flibustier.EntityBookResponse
	(*AuthorName)(nil),           // 12: flibustier.AuthorName
	(*EntityName)(nil),           // 13: flibustier.EntityName
}
var file_flibustier_proto_depIdxs = []int32{
	0,  // 0: flibustier.SearchRequest.entry_type_filter:type_name -> flibustier.EntryType
	0,  // 1: flibustier.FoundEntry.entry_type:type_name -> flibustier.EntryType
	1,  // 2: flibustier.SearchResponse.original_request:type_name -> flibustier.SearchRequest
	2,  // 3: flibustier.SearchResponse.entry:type_name -> flibustier.FoundEntry
	0,  // 4: flibustier.TrackedEntry.entry_type:type_name -> flibustier.EntryType
	4,  // 5: flibustier.TrackedEntry.book:type_name -> flibustier.Book
	5,  // 6: flibustier.UpdateRequired.tracked_entry:type_name -> flibustier.TrackedEntry
	4,  // 7: flibustier.UpdateRequired.new_book:type_name -> flibustier.Book
	5,  // 8: flibustier.UpdateCheckRequest.tracked_entry:type_name -> flibustier.TrackedEntry
	6,  // 9: flibustier.UpdateCheckResponse.update_required:type_name -> flibustier.UpdateRequired
	4,  // 10: flibustier.EntityBookResponse.book:type_name -> flibustier.Book
	13, // 11: flibustier.EntityBookResponse.entity_name:type_name -> flibustier.EntityName
	12, // 12: flibustier.EntityName.author_name:type_name -> flibustier.AuthorName
	1,  // 13: flibustier.Flibustier.GlobalSearch:input_type -> flibustier.SearchRequest
	7,  // 14: flibustier.Flibustier.CheckUpdates:input_type -> flibustier.UpdateCheckRequest
	9,  // 15: flibustier.Flibustier.GetSeriesBooks:input_type -> flibustier.SequenceBooksRequest
	10, // 16: flibustier.Flibustier.GetAuthorBooks:input_type -> flibustier.AuthorBooksRequest
	3,  // 17: flibustier.Flibustier.GlobalSearch:output_type -> flibustier.SearchResponse
	8,  // 18: flibustier.Flibustier.CheckUpdates:output_type -> flibustier.UpdateCheckResponse
	11, // 19: flibustier.Flibustier.GetSeriesBooks:output_type -> flibustier.EntityBookResponse
	11, // 20: flibustier.Flibustier.GetAuthorBooks:output_type -> flibustier.EntityBookResponse
	17, // [17:21] is the sub-list for method output_type
	13, // [13:17] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_flibustier_proto_init() }
func file_flibustier_proto_init() {
	if File_flibustier_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_flibustier_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flibustier_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FoundEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flibustier_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flibustier_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Book); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flibustier_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackedEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flibustier_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequired); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flibustier_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flibustier_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flibustier_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SequenceBooksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flibustier_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorBooksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flibustier_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityBookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flibustier_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flibustier_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_flibustier_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*EntityName_AuthorName)(nil),
		(*EntityName_SequenceName)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_flibustier_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_flibustier_proto_goTypes,
		DependencyIndexes: file_flibustier_proto_depIdxs,
		EnumInfos:         file_flibustier_proto_enumTypes,
		MessageInfos:      file_flibustier_proto_msgTypes,
	}.Build()
	File_flibustier_proto = out.File
	file_flibustier_proto_rawDesc = nil
	file_flibustier_proto_goTypes = nil
	file_flibustier_proto_depIdxs = nil
}
