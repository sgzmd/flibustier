package main

import (
	"context"
	"go.mongodb.org/mongo-driver/bson"
	"go.mongodb.org/mongo-driver/bson/primitive"
)

type Author struct {
	ID 	primitive.ObjectID `bson:"_id"`
	AuthorId	int32	`bson:"author_id"`
	FirstName	string	`bson:"first_name"`
	MiddleName	string	`bson:"middle_name"`
	LastName	string	`bson:"last_name"`
}

func CreateAuthor(author Author) error {
	client, err := GetMongoClient()
	if err != nil {
		return err
	}

	collection := client.Database(DB).Collection(AUTHORS)
	_, err = collection.InsertOne(context.TODO(), author)

	return err
}

func GetAuthorByAuthorId(authorId int32) (Author, error) {
	result := Author{}
	filter := bson.D{primitive.E{Key: "author_id", Value: authorId}}
	client, err := GetMongoClient()
	if err != nil {
		return result, err
	}

	collection := client.Database(DB).Collection(AUTHORS)
	err = collection.FindOne(context.TODO(), filter).Decode(&result)

	return result, err
}